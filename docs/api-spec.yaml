openapi: 3.1.0
info:
  title: Supabase Items and Recipes API
  description: RESTful API for reading and writing items and recipes using Supabase PostgREST.
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://amehiertzqtbtcjhugql.supabase.co/rest/v1
    description: Supabase REST API (production)

security:
  - apiKeyAuth: []

paths:
  /recipes:
    get:
      operationId: getRecipes
      summary: Get recipes
      description: Retrieves recipes visible to the authenticated user.
      parameters:
        - name: select
          in: query
          description: "Columns to retrieve (default: *)."
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: Order clause, e.g. created_at.desc.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of rows to return.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    post:
      operationId: saveRecipe
      summary: Create a new recipe in the database
      description: Inserts a new recipe row.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeInsert'
            examples:
              minimalRecipe:
                summary: Minimal recipe
                description: Smallest recommended payload to create a recipe
                value:
                  name: Simple Scrambled Eggs
                  instructions: Beat eggs, cook in butter, season.
              fullRecipe:
                summary: Full recipe with nutrition and ingredients
                description: Includes optional fields commonly used by the app
                value:
                  name: AI-Generated Chicken Stir Fry
                  instructions: |
                    1. Heat oil in wok
                    2. Add chicken until golden
                    3. Add vegetables and stir-fry
                    4. Season with soy
                  servings: 4
                  total_time: 25
                  ingredient_list:
                    - chicken breast
                    - mixed vegetables
                    - soy sauce
                    - garlic
                    - ginger
                    - oil
                  nutrition_per_serving:
                    calories: 320
                    protein: 28
                    carbs: 12
                    fat: 15
                  notes: Quick and healthy weeknight dinner
                  nutrition_source: ai_generated
                  is_favorite: false
                  source_link: https://example.com/stirfry
              ingredientListArray:
                summary: Single ingredient must be an array
                description: Even one ingredient must be wrapped in an array of strings
                value:
                  name: Salted Water
                  instructions: Boil water; add salt.
                  ingredient_list:
                    - salt
      responses:
        '201':
          description: Recipe created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    patch:
      operationId: updateRecipe
      summary: Update a recipe by ID
      description: Updates rows in the recipes table filtered by ID.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
        - name: id
          in: query
          required: true
          description: PostgREST filter syntax, e.g. id=eq.123.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeUpdate'
      responses:
        '200':
          description: Updated recipe rows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    delete:
      operationId: deleteRecipe
      summary: Delete a recipe by ID
      description: Deletes rows in the recipes table filtered by ID.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
        - name: id
          in: query
          required: true
          description: PostgREST filter syntax, e.g. id=eq.123.
          schema:
            type: string
      responses:
        '200':
          description: Deleted recipe rows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

  /items:
    get:
      operationId: getItems
      summary: Get items
      description: Retrieves items visible to the authenticated user.
      parameters:
        - name: select
          in: query
          description: "Columns to retrieve (default: *)."
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: Order clause, e.g. updated_at.desc.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of rows to return.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    post:
      operationId: createItem
      summary: Create a new item
      description: Inserts a new item row.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInsert'
      responses:
        '201':
          description: Item created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    patch:
      operationId: updateItem
      summary: Update an item by ID
      description: Updates rows in the items table filtered by ID.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
        - name: id
          in: query
          required: true
          description: PostgREST filter syntax, e.g. id=eq.123.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdate'
      responses:
        '200':
          description: Updated item rows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    delete:
      operationId: deleteItem
      summary: Delete an item by ID
      description: Deletes rows in the items table filtered by ID.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
        - name: id
          in: query
          required: true
          description: PostgREST filter syntax, e.g. id=eq.123.
          schema:
            type: string
      responses:
        '200':
          description: Deleted item rows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

  /meal_logs:
    get:
      operationId: getMealLogs
      summary: Get meal logs
      description: Retrieves meal logs visible to the authenticated user.
      parameters:
        - name: select
          in: query
          description: "Columns to retrieve (default: *)."
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: Order clause, e.g. created_at.desc or eaten_on.desc.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of rows to return.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of meal logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MealLog'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    post:
      operationId: saveMealLog
      summary: Create a new meal log in the database
      description: Inserts a new meal log row.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealLogInsert'
            examples:
              minimalMealLog:
                summary: Minimal meal log
                description: Smallest recommended payload to create a meal log entry
              value:
                  meal_name: Greek Yogurt Bowl
                  items:
                    - 1 cup plain Greek yogurt
                    - 1/2 cup blueberries
                  macros:
                    calories: 210
                    protein: 20
                    carbs: 18
                    fat: 7
                  eaten_on: 2025-01-15
              fullMealLog:
                summary: Full meal log with macros and notes
                description: Includes optional fields commonly captured by the app
                value:
                  meal_name: Spicy Chicken Stir Fry
                  items:
                    - 8 oz chicken breast
                    - 1 cup mixed vegetables
                    - 1 tbsp soy sauce
                  notes: Weeknight dinner, lots of veggies
                  rating: 4.5
                  macros:
                    calories: 520
                    protein: 55
                    carbs: 32
                    fat: 18
                  eaten_on: 2025-01-14
      responses:
        '201':
          description: Meal log created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MealLog'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    patch:
      operationId: updateMealLog
      summary: Update a meal log by ID
      description: Updates rows in the meal_logs table filtered by ID.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
        - name: id
          in: query
          required: true
          description: PostgREST filter syntax, e.g. id=eq.123.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealLogUpdate'
      responses:
        '200':
          description: Updated meal log rows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MealLog'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

    delete:
      operationId: deleteMealLog
      summary: Delete a meal log by ID
      description: Deletes rows in the meal_logs table filtered by ID.
      parameters:
        - name: Prefer
          in: header
          required: false
          description: Ask PostgREST to return changed rows.
          schema:
            type: string
            example: return=representation
        - name: id
          in: query
          required: true
          description: PostgREST filter syntax, e.g. id=eq.123.
          schema:
            type: string
      responses:
        '200':
          description: Deleted meal log rows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MealLog'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - apiKeyAuth: []

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: apikey

  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: Invalid request parameters
        code:
          type: string
          description: Optional error code
          example: bad_request
        details:
          type: object
          additionalProperties: true
          description: Optional error details
    Recipe:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        total_time:
          type:
            - integer
            - 'null'
        servings:
          type:
            - integer
            - 'null'
        instructions:
          type:
            - string
            - 'null'
        nutrition_per_serving:
          type:
            - object
            - 'null'
          additionalProperties: true
        ingredient_list:
          type:
            - array
            - 'null'
          description: Array of ingredient names. Must be an array of strings; for a single ingredient use a one-element array.
          items:
            type: string
          example:
            - chicken breast
            - garlic
        nutrition_source:
          type:
            - string
            - 'null'
        is_favorite:
          type:
            - boolean
            - 'null'
        source_link:
          type:
            - string
            - 'null'
        notes:
          type:
            - string
            - 'null'
        times_cooked:
          type:
            - integer
            - 'null'
        last_cooked:
          type:
            - string
            - 'null'
          format: date-time
        created_at:
          type:
            - string
            - 'null'
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time

    RecipeInsert:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        instructions:
          type:
            - string
            - 'null'
        servings:
          type:
            - integer
            - 'null'
        total_time:
          type:
            - integer
            - 'null'
        ingredient_list:
          type:
            - array
            - 'null'
          description: Array of ingredient names (strings). Do not send a single string or objects.
          items:
            type: string
          example:
            - spaghetti
            - eggs
            - parmesan cheese
        nutrition_per_serving:
          type:
            - object
            - 'null'
          additionalProperties: true
        notes:
          type:
            - string
            - 'null'
        nutrition_source:
          type:
            - string
            - 'null'
        is_favorite:
          type:
            - boolean
            - 'null'
        source_link:
          type:
            - string
            - 'null'
        times_cooked:
          type:
            - integer
            - 'null'
        last_cooked:
          type:
            - string
            - 'null'
          format: date-time

    RecipeUpdate:
      type: object
      properties:
        name:
          type: string
        instructions:
          type:
            - string
            - 'null'
        servings:
          type:
            - integer
            - 'null'
        total_time:
          type:
            - integer
            - 'null'
        ingredient_list:
          type:
            - array
            - 'null'
          description: Array of ingredient names (strings). Use a one-element array for a single ingredient.
          items:
            type: string
          example:
            - salt
            - water
        nutrition_per_serving:
          type:
            - object
            - 'null'
          additionalProperties: true
        notes:
          type:
            - string
            - 'null'
        nutrition_source:
          type:
            - string
            - 'null'
        is_favorite:
          type:
            - boolean
            - 'null'
        source_link:
          type:
            - string
            - 'null'
        times_cooked:
          type:
            - integer
            - 'null'
        last_cooked:
          type:
            - string
            - 'null'
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time

    MealLog:
      type: object
      required:
        - id
        - meal_name
        - items
        - macros
        - eaten_on
      properties:
        id:
          type: integer
          format: int64
        meal_name:
          type: string
        notes:
          type:
            - string
            - 'null'
        rating:
          type:
            - number
            - 'null'
          format: float
          minimum: 0
          maximum: 5
        macros:
          type: object
          description: Macronutrient totals for the meal. Keys should be numeric values in grams (except calories).
          properties:
            calories:
              type: integer
              example: 550
            protein:
              type: integer
              example: 45
            carbs:
              type: integer
              example: 50
            fat:
              type: integer
              example: 18
          additionalProperties: false
        created_at:
          type:
            - string
            - 'null'
          format: date-time
        items:
          type: array
          description: Free-form list of meal components supplied by the user.
          items:
            type: string
          minItems: 1
          example:
            - 2 scrambled eggs
            - 1 slice sourdough toast
        eaten_on:
          type: string
          format: date

    MealLogInsert:
      type: object
      required:
        - meal_name
        - items
        - eaten_on
        - macros
      properties:
        meal_name:
          type: string
        items:
          type: array
          items:
            type: string
          minItems: 1
        eaten_on:
          type: string
          format: date
        notes:
          type:
            - string
            - 'null'
        rating:
          type:
            - number
            - 'null'
          format: float
          minimum: 0
          maximum: 5
        macros:
          type: object
          properties:
            calories:
              type: integer
            protein:
              type: integer
            carbs:
              type: integer
            fat:
              type: integer
          additionalProperties: false

    MealLogUpdate:
      type: object
      properties:
        meal_name:
          type: string
        items:
          type: array
          items:
            type: string
          minItems: 1
        eaten_on:
          type: string
          format: date
        notes:
          type:
            - string
            - 'null'
        rating:
          type:
            - number
            - 'null'
          format: float
          minimum: 0
          maximum: 5
        macros:
          type: object
          properties:
            calories:
              type: integer
            protein:
              type: integer
            carbs:
              type: integer
            fat:
              type: integer
          additionalProperties: false

    Item:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        brand:
          type:
            - string
            - 'null'
        category:
          type:
            - string
            - 'null'
        in_stock:
          type:
            - boolean
            - 'null'
        price:
          type:
            - number
            - 'null'
        carbs_per_serving:
          type:
            - number
            - 'null'
        fat_per_serving:
          type:
            - number
            - 'null'
        protein_per_serving:
          type:
            - number
            - 'null'
        calories_per_serving:
          type:
            - number
            - 'null'
        servings_per_container:
          type:
            - number
            - 'null'
        serving_size_grams:
          type:
            - number
            - 'null'
        serving_quantity:
          type:
            - number
            - 'null'
        serving_unit:
          type:
            - string
            - 'null'
        serving_unit_type:
          type:
            - string
            - 'null'
          enum: [volume, weight, package]
        image_url:
          type:
            - string
            - 'null'
        nutrition_source:
          type:
            - string
            - 'null'
        barcode:
          type:
            - string
            - 'null'
        last_purchased:
          type:
            - string
            - 'null'
          format: date-time
        purchase_count:
          type:
            - number
            - 'null'
        rating:
          type:
            - number
            - 'null'
        last_edited:
          type:
            - string
            - 'null'
          format: date-time
        normalized_name:
          type:
            - string
            - 'null'
        ingredients:
          type:
            - string
            - 'null'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ItemInsert:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        brand:
          type:
            - string
            - 'null'
        category:
          type:
            - string
            - 'null'
        in_stock:
          type:
            - boolean
            - 'null'
        price:
          type:
            - number
            - 'null'
        carbs_per_serving:
          type:
            - number
            - 'null'
        fat_per_serving:
          type:
            - number
            - 'null'
        protein_per_serving:
          type:
            - number
            - 'null'
        calories_per_serving:
          type:
            - number
            - 'null'
        servings_per_container:
          type:
            - number
            - 'null'
        serving_size_grams:
          type:
            - number
            - 'null'
        serving_quantity:
          type:
            - number
            - 'null'
        serving_unit:
          type:
            - string
            - 'null'
        serving_unit_type:
          type:
            - string
            - 'null'
          enum: [volume, weight, package]
        image_url:
          type:
            - string
            - 'null'
        nutrition_source:
          type:
            - string
            - 'null'
        barcode:
          type:
            - string
            - 'null'
        last_purchased:
          type:
            - string
            - 'null'
          format: date-time
        purchase_count:
          type:
            - number
            - 'null'
        rating:
          type:
            - number
            - 'null'
        last_edited:
          type:
            - string
            - 'null'
          format: date-time
        ingredients:
          type:
            - string
            - 'null'

    ItemUpdate:
      type: object
      properties:
        name:
          type: string
        brand:
          type:
            - string
            - 'null'
        category:
          type:
            - string
            - 'null'
        in_stock:
          type:
            - boolean
            - 'null'
        price:
          type:
            - number
            - 'null'
        carbs_per_serving:
          type:
            - number
            - 'null'
        fat_per_serving:
          type:
            - number
            - 'null'
        protein_per_serving:
          type:
            - number
            - 'null'
        calories_per_serving:
          type:
            - number
            - 'null'
        servings_per_container:
          type:
            - number
            - 'null'
        serving_size_grams:
          type:
            - number
            - 'null'
        serving_quantity:
          type:
            - number
            - 'null'
        serving_unit:
          type:
            - string
            - 'null'
        serving_unit_type:
          type:
            - string
            - 'null'
          enum: [volume, weight, package]
        image_url:
          type:
            - string
            - 'null'
        nutrition_source:
          type:
            - string
            - 'null'
        barcode:
          type:
            - string
            - 'null'
        last_purchased:
          type:
            - string
            - 'null'
          format: date-time
        purchase_count:
          type:
            - number
            - 'null'
        rating:
          type:
            - number
            - 'null'
        last_edited:
          type:
            - string
            - 'null'
          format: date-time
        ingredients:
          type:
            - string
            - 'null'
