openapi: 3.1.0
info:
  title: Uzo Food Tracking Recipes API
  description: |
    REST API for managing recipes in the Uzo Food Tracking application.
    This API is designed for AI-generated recipe management and ChatGPT integration.
    
    Features:
    - Get all recipes or search by name
    - Create new AI-generated recipes with ingredient lists
    - Update existing recipes by ID or name
    - Delete recipes
    
    All recipes support AI-generated ingredient lists for flexible recipe creation.
  version: 1.0.0
  contact:
    name: Uzo Food Tracking API
    url: https://github.com/kosiuzo/uzo-food-tracking

servers:
  - url: http://localhost:8084/api
    description: Local development server
  - url: https://your-production-domain.com/api
    description: Production server

paths:
  /recipes:
    get:
      summary: Get all recipes
      description: |
        Retrieve all recipes from the database, ordered by creation date (newest first).
        Returns an empty array if no recipes exist.
      operationId: getAllRecipes
      tags:
        - Recipes
      responses:
        '200':
          description: Successfully retrieved all recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRecipesResponse'
              examples:
                success:
                  summary: Successful response with recipes
                  value:
                    data:
                      - id: 1
                        name: "AI-Generated Pasta Carbonara"
                        instructions: "1. Boil pasta\n2. Cook bacon\n3. Mix with eggs and cheese"
                        servings: 4
                        total_time: 30
                        ingredient_list: ["spaghetti", "bacon", "eggs", "parmesan cheese", "black pepper"]
                        nutrition_per_serving:
                          calories: 450
                          protein: 20
                          carbs: 45
                          fat: 18
                        notes: "Classic Italian recipe"
                        nutrition_source: "ai_generated"
                        is_favorite: true
                        source_link: null
                        times_cooked: 3
                        last_cooked: "2024-01-15T18:30:00Z"
                        created_at: "2024-01-01T12:00:00Z"
                        updated_at: "2024-01-15T18:30:00Z"
                    error: null
                    success: true
                empty:
                  summary: No recipes found
                  value:
                    data: []
                    error: null
                    success: true
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create a new recipe
      description: |
        Create a new recipe, typically AI-generated. The recipe name must be unique.
        Ingredient lists are stored as arrays of strings for flexibility.
      operationId: createRecipe
      tags:
        - Recipes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecipeRequest'
            examples:
              ai_generated:
                summary: AI-generated recipe
                value:
                  name: "AI-Generated Chicken Stir Fry"
                  instructions: "1. Heat oil in wok\n2. Add chicken and cook until golden\n3. Add vegetables and stir fry\n4. Season with soy sauce"
                  servings: 4
                  total_time: 25
                  ingredient_list: ["chicken breast", "mixed vegetables", "soy sauce", "vegetable oil", "garlic", "ginger"]
                  nutrition_per_serving:
                    calories: 320
                    protein: 28
                    carbs: 12
                    fat: 15
                  notes: "Quick and healthy weeknight dinner"
                  nutrition_source: "ai_generated"
                  is_favorite: false
              minimal:
                summary: Minimal recipe data
                value:
                  name: "Simple Scrambled Eggs"
                  instructions: "Scramble eggs in pan with butter"
      responses:
        '201':
          description: Recipe created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                missing_name:
                  summary: Missing recipe name
                  value:
                    data: null
                    error: "Recipe name is required"
                    success: false
                duplicate_name:
                  summary: Duplicate recipe name
                  value:
                    data: null
                    error: "Recipe with name \"Existing Recipe\" already exists"
                    success: false
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes/search:
    get:
      summary: Search recipes by name
      description: |
        Search for recipes using partial name matching (case-insensitive).
        Returns all recipes containing the search term in their name.
      operationId: searchRecipesByName
      tags:
        - Recipes
      parameters:
        - name: q
          in: query
          required: true
          description: Search term to match against recipe names
          schema:
            type: string
            minLength: 1
            example: "pasta"
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRecipesResponse'
        '400':
          description: Invalid search parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes/{name}:
    get:
      summary: Get recipe by exact name
      description: |
        Retrieve a recipe by its exact name (case-sensitive).
        This is useful when you know the exact recipe name.
      operationId: getRecipeByName
      tags:
        - Recipes
      parameters:
        - name: name
          in: path
          required: true
          description: Exact name of the recipe to retrieve
          schema:
            type: string
            example: "AI-Generated Pasta Carbonara"
      responses:
        '200':
          description: Recipe found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '404':
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                data: null
                error: "Recipe with name \"Nonexistent Recipe\" not found"
                success: false
        '400':
          description: Invalid recipe name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update recipe by name
      description: |
        Update an existing recipe identified by its name.
        Only provided fields will be updated (partial updates supported).
      operationId: updateRecipeByName
      tags:
        - Recipes
      parameters:
        - name: name
          in: path
          required: true
          description: Exact name of the recipe to update
          schema:
            type: string
            example: "AI-Generated Pasta Carbonara"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecipeRequest'
            examples:
              partial_update:
                summary: Partial update
                value:
                  servings: 6
                  notes: "Updated serving size"
                  is_favorite: true
              full_update:
                summary: Full update
                value:
                  name: "Updated Recipe Name"
                  instructions: "Updated instructions"
                  servings: 8
                  total_time: 45
                  ingredient_list: ["updated", "ingredient", "list"]
                  nutrition_per_serving:
                    calories: 400
                    protein: 22
                    carbs: 40
                    fat: 16
                  notes: "Completely updated recipe"
                  is_favorite: true
      responses:
        '200':
          description: Recipe updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes/id/{id}:
    patch:
      summary: Update recipe by ID
      description: |
        Update an existing recipe identified by its numeric ID.
        Only provided fields will be updated (partial updates supported).
      operationId: updateRecipeById
      tags:
        - Recipes
      parameters:
        - name: id
          in: path
          required: true
          description: Numeric ID of the recipe to update
          schema:
            type: integer
            minimum: 1
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecipeRequest'
      responses:
        '200':
          description: Recipe updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete recipe by ID
      description: |
        Delete a recipe by its numeric ID.
        This action cannot be undone.
      operationId: deleteRecipeById
      tags:
        - Recipes
      parameters:
        - name: id
          in: path
          required: true
          description: Numeric ID of the recipe to delete
          schema:
            type: integer
            minimum: 1
            example: 1
      responses:
        '200':
          description: Recipe deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID of the deleted recipe
                  error:
                    type: null
                  success:
                    type: boolean
                    example: true
        '400':
          description: Invalid recipe ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes/by-name/{name}:
    delete:
      summary: Delete recipe by name
      description: |
        Delete a recipe by its exact name match.
        This is useful for conversational interfaces where the recipe name is known.
        This action cannot be undone.
      operationId: deleteRecipeByName
      tags:
        - Recipes
      parameters:
        - name: name
          in: path
          required: true
          description: Exact name of the recipe to delete (case-sensitive)
          schema:
            type: string
            minLength: 1
            example: "Spaghetti Bolognese"
      responses:
        '200':
          description: Recipe deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID of the deleted recipe
                        example: 123
                      name:
                        type: string
                        description: Name of the deleted recipe
                        example: "Spaghetti Bolognese"
                  error:
                    type: null
                  success:
                    type: boolean
                    example: true
              example:
                data:
                  id: 123
                  name: "Spaghetti Bolognese"
                error: null
                success: true
        '400':
          description: Invalid recipe name (empty or missing)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                data: null
                error: "Recipe name is required"
                success: false
        '404':
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                data: null
                error: 'Recipe with name "Non-existent Recipe" not found'
                success: false
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Recipe:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: Unique identifier for the recipe
          example: 1
        name:
          type: string
          description: Name of the recipe
          minLength: 1
          example: "AI-Generated Pasta Carbonara"
        instructions:
          type: string
          nullable: true
          description: Step-by-step cooking instructions
          example: "1. Boil pasta\n2. Cook bacon\n3. Mix with eggs and cheese"
        servings:
          type: integer
          nullable: true
          minimum: 1
          description: Number of servings this recipe makes
          example: 4
        total_time:
          type: integer
          nullable: true
          minimum: 1
          description: Total cooking time in minutes
          example: 30
        ingredient_list:
          type: array
          nullable: true
          description: Array of ingredient names (AI-generated or manual)
          items:
            type: string
          example: ["spaghetti", "bacon", "eggs", "parmesan cheese", "black pepper"]
        nutrition_per_serving:
          type: object
          nullable: true
          description: Nutritional information per serving
          properties:
            calories:
              type: number
              description: Calories per serving
              example: 450
            protein:
              type: number
              description: Protein in grams per serving
              example: 20
            carbs:
              type: number
              description: Carbohydrates in grams per serving
              example: 45
            fat:
              type: number
              description: Fat in grams per serving
              example: 18
          example:
            calories: 450
            protein: 20
            carbs: 45
            fat: 18
        notes:
          type: string
          nullable: true
          description: Additional notes or tips for the recipe
          example: "Classic Italian recipe"
        nutrition_source:
          type: string
          nullable: true
          enum: [ai_generated, manual, calculated]
          description: How nutrition information was determined
          example: "ai_generated"
        is_favorite:
          type: boolean
          nullable: true
          description: Whether this recipe is marked as favorite
          example: true
        source_link:
          type: string
          nullable: true
          description: URL to original recipe source
          example: null
        times_cooked:
          type: integer
          nullable: true
          minimum: 0
          description: Number of times this recipe has been cooked
          example: 3
        last_cooked:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when recipe was last cooked
          example: "2024-01-15T18:30:00Z"
        created_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when recipe was created
          example: "2024-01-01T12:00:00Z"
        updated_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when recipe was last updated
          example: "2024-01-15T18:30:00Z"

    CreateRecipeRequest:
      type: object
      required:
        - name
        - instructions
      properties:
        name:
          type: string
          description: Name of the recipe (must be unique)
          minLength: 1
          example: "AI-Generated Chicken Stir Fry"
        instructions:
          type: string
          description: Step-by-step cooking instructions
          minLength: 1
          example: "1. Heat oil in wok\n2. Add chicken and cook until golden"
        servings:
          type: integer
          minimum: 1
          description: Number of servings this recipe makes
          example: 4
        total_time:
          type: integer
          minimum: 1
          description: Total cooking time in minutes
          example: 25
        ingredient_list:
          type: array
          description: Array of ingredient names
          items:
            type: string
          example: ["chicken breast", "mixed vegetables", "soy sauce"]
        nutrition_per_serving:
          type: object
          description: Nutritional information per serving
          properties:
            calories:
              type: number
              example: 320
            protein:
              type: number
              example: 28
            carbs:
              type: number
              example: 12
            fat:
              type: number
              example: 15
        notes:
          type: string
          description: Additional notes or tips for the recipe
          example: "Quick and healthy weeknight dinner"
        nutrition_source:
          type: string
          enum: [ai_generated, manual, calculated]
          default: ai_generated
          description: How nutrition information was determined
        is_favorite:
          type: boolean
          default: false
          description: Whether this recipe should be marked as favorite

    UpdateRecipeRequest:
      type: object
      description: All fields are optional for partial updates
      properties:
        name:
          type: string
          description: Updated name of the recipe
          minLength: 1
        instructions:
          type: string
          description: Updated cooking instructions
          minLength: 1
        servings:
          type: integer
          minimum: 1
          description: Updated number of servings
        total_time:
          type: integer
          minimum: 1
          description: Updated total cooking time in minutes
        ingredient_list:
          type: array
          description: Updated array of ingredient names
          items:
            type: string
        nutrition_per_serving:
          type: object
          description: Updated nutritional information per serving
          properties:
            calories:
              type: number
            protein:
              type: number
            carbs:
              type: number
            fat:
              type: number
        notes:
          type: string
          description: Updated notes or tips for the recipe
        nutrition_source:
          type: string
          enum: [ai_generated, manual, calculated]
          description: How nutrition information was determined
        is_favorite:
          type: boolean
          description: Whether this recipe is marked as favorite

    RecipeResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Recipe'
        error:
          type: null
        success:
          type: boolean
          example: true

    GetAllRecipesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        error:
          type: null
        success:
          type: boolean
          example: true

    ErrorResponse:
      type: object
      properties:
        data:
          type: null
        error:
          type: string
          description: Error message describing what went wrong
          example: "Recipe name is required"
        success:
          type: boolean
          example: false

tags:
  - name: Recipes
    description: Operations for managing recipes

externalDocs:
  description: Find out more about the Uzo Food Tracking app
  url: https://github.com/kosiuzo/uzo-food-tracking